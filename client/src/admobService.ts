import { AdMob, BannerAdOptions, BannerAdSize, BannerAdPosition, AdMobBannerSize, InterstitialAdPluginEvents, AdMobError } from '@capacitor-community/admob';

async function initialize() {
  try {
    await AdMob.initialize({
      requestTrackingAuthorization: true,
      testingDevices: ['YOUR_DEVICE_ID'], // Pour les tests
      initializeForTesting: true, // √Ä retirer en production
    });
    console.log('‚úÖ AdMob initialis√©');
  } catch (error) {
    console.error('‚ùå Erreur initialisation AdMob:', error);
  }
}

async function showBanner(options?: { position?: 'TOP' | 'BOTTOM' }) {
  try {
    const bannerOptions: BannerAdOptions = {
      adId: 'ca-app-pub-3940256099942544/6300978111', // ID de test
      adSize: BannerAdSize.BANNER,
      position: options?.position === 'TOP' ? BannerAdPosition.TOP_CENTER : BannerAdPosition.BOTTOM_CENTER,
      margin: 0,
    };

    await AdMob.showBanner(bannerOptions);
    console.log('‚úÖ Banni√®re affich√©e');
  } catch (error) {
    console.error('‚ùå Erreur affichage banni√®re:', error);
  }
}

async function hideBanner() {
  try {
    await AdMob.removeBanner();
    console.log('üôà Banni√®re masqu√©e');
  } catch (error) {
    console.error('‚ùå Erreur masquage banni√®re:', error);
  }
}

async function removeBanner() {
  try {
    await AdMob.removeBanner();
    console.log('üóëÔ∏è Banni√®re supprim√©e');
  } catch (error) {
    console.error('‚ùå Erreur suppression banni√®re:', error);
  }
}

async function prepareInterstitial() {
  try {
    await AdMob.prepareInterstitial({
      adId: 'ca-app-pub-3940256099942544/1033173712', // ID de test
    });
    console.log('‚è≥ Interstitiel pr√©par√©');
  } catch (error) {
    console.error('‚ùå Erreur pr√©paration interstitiel:', error);
  }
}

async function showInterstitial() {
  try {
    await AdMob.showInterstitial();
    console.log('‚úÖ Interstitiel affich√©');
  } catch (error) {
    console.error('‚ùå Erreur affichage interstitiel:', error);
  }
}

// Fonction combin√©e pour afficher un interstitiel
async function showInterstitialAd() {
  await prepareInterstitial();
  await showInterstitial();
}

// Export des fonctions pour compatibilit√© avec les imports existants
export { initialize };
export { showBanner };
export { hideBanner };
export { removeBanner };
export { prepareInterstitial };
export { showInterstitial };
export { showInterstitialAd };